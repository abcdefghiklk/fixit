<!-- Java 1.4 Specific Tests -->

  <ajc-test dir="pureJava" title="assert flow"
      keywords="from-14tests,purejava">
        <compile options="-source,1.4" files="AssertsCF.java">
            <message kind="error" line="8"/>
            <message kind="error" line="11"/>
        </compile>
    </ajc-test>

    <ajc-test dir="pureJava" title="assert flow - 2"
      keywords="from-14tests,purejava">
        <compile options="-source,1.4" files="AssertsCF2.java">
        </compile>
    </ajc-test>

    <ajc-test dir="pureJava" title="assert typing"
      keywords="from-14tests,purejava,fail-publicType">
        <compile options="-source,1.4" files="AssertsCF1.java">
            <message kind="error" line="5"/>
        </compile>
    </ajc-test>

   <ajc-test dir="pureJava" title="compiling asserts in methods"
      keywords="from-14tests,purejava">
        <compile options="-source,1.4" files="AssertInMethod.java"/>
        <run class="AssertInMethod" vm="1.4"/>
    </ajc-test>

    <ajc-test dir="pureJava" title="asserts" keywords="from-14tests">
        <compile options="-source,1.4" files="Asserts.java"/>
        <run class="Asserts" vm="1.4"/>
    </ajc-test>
    
    <ajc-test dir="pureJava" pr="725"
      title="asserts in aspect and declared methods [requires 1.4]"
      keywords="from-14tests" comment="not pure java!">
        <compile options="-source,1.4"
          files="IntroducedAssertion.java"/>
        <run class="IntroducedAssertion" vm="1.4"/>
    </ajc-test>

    <!-- This test case requires bytecode generated according to the declaring type
        rules in JLS 2nd edition.  -1.4 must be passed to the eclipse compiler for
        this behavior. -->
    <ajc-test dir="new"
      title="Does the matrix coverage thing for the new method signatures"
      keywords="from-resolved_10x">
        <compile files="MethodSignatures.java" options="-1.4,-Xlint:ignore"/>
        <run class="MethodSignatures" vm="1.4"/>
    </ajc-test>  

    <!-- This test case requires bytecode generated according to the declaring type
        rules in JLS 2nd edition.  -1.4 must be passed to the eclipse compiler for
        this behavior. -->
    <ajc-test dir="new" title="correct types of parameters at call-sites"
      keywords="from-resolved_10x">
        <compile files="CallTypes.java" options="-1.4,-Xlint:ignore"/>
        <run class="CallTypes" vm="1.4"/>
    </ajc-test>

    <!-- This test case requires bytecode generated according to the declaring type
        rules in JLS 2nd edition.  -1.4 must be passed to the eclipse compiler for
        this behavior.  That means that this case will only work under 1.4.  -->
    <ajc-test dir="new"
      title="target type matching with messy interface hierarchies"
      keywords="from-resolved_10x">
        <compile files="CallTypesI.java" options="-1.4,-Xlint:ignore"/>
        <run class="CallTypesI" vm="1.4"/>
    </ajc-test>
 
      <ajc-test dir="new" title="assert tests in introduction [requires 1.4]"
      keywords="from-14tests,fail-unimplemented">
        <compile options="-source,1.4" files="AssertInIntro.java"/>
        <run class="AssertInIntro" vm="1.4"/>
    </ajc-test>

 
    <ajc-test dir="base/test131"
      title="various forms of package name pattern matching work"
      keywords="from-broken14usejavac">
        <compile files="Driver.java,p1/C1.java,p1/p2/C2.java" />
        <run class="Driver"/>
    </ajc-test>

     <ajc-test dir="new" pr="657"
      title="assert statement in advice coverage [requires 1.4]"
      keywords="from-14tests,fail-in-eclipse">
        <compile options="-source,1.4" files="AssertInAdvice.java"/>
        <run class="AssertInAdvice" vm="1.4"/>
    </ajc-test>

    <ajc-test dir="new" pr="657"
      title="assert statement in advice  [requires 1.4]" 
      keywords="from-14tests,fail-in-eclipse">
        <compile options="-source,1.4" files="AssertInAdviceBug.java"/>
        <run class="AssertInAdviceBug" vm="1.4"/>
    </ajc-test>

    <ajc-test dir="bugs" pr="28703" title="assert and pertarget crashes compiler">
        <compile files="EnsureOverriding.java" options="-source,1.4"/>
        <run class="EnsureOverriding" vm="1.4"/>
    </ajc-test>
    
    <ajc-test dir="bugs/interSpecials" title="testing that assert works like .class"
      pr="36110">
        <compile files="p1/C.java,p2/A2.java" options="-source,1.4"/>
        <run class="p2.A2" vm="1.4"/>
    </ajc-test>

   <ajc-test dir="bugs/jpOptimization" 
    	pr="45441"
    	title="JoinPoint Optimization when targetting 1.4">
        <compile 
        	files="de/test/MyMain.java,
        		   de/test/MyAspect.java"
            options="-1.4"/>
        <run class="de.test.MyMain"/>
    </ajc-test>

	<ajc-test dir="bugs"
		title="XLint warning for call PCD's using subtype of defining type (-1.4 -Xlint:ignore)"
		pr="41952"
		>
		<compile
			options="-Xlint:ignore,-1.4" 
			files="DeclaringTypeWarning.java" >
            <message kind="warning" line="12"/>
		</compile>
	</ajc-test>
	
	<ajc-test dir="bugs"
		title="XLint warning for call PCD's using subtype of defining type (-1.4)"
		pr="41952"
		>
		<compile
			options="-1.4" 
			files="DeclaringTypeWarning.java" >
			<message kind="warning" line="6" text="declaring type">
				<source line="14" file="DeclaringTypeWarning.java"/>
			</message>
			<message kind="warning" line="12" text="declare warning">
				<source line="19" file="DeclaringTypeWarning.java"/>
			</message>
		</compile>
	</ajc-test>
 
    <ajc-test dir="bugs" pr="39711"
   	 title="Class Literals as non final fields (also assert, and this$0)">
        <compile files="ClassLiteralField.java" options="-source,1.4"/>
        <run vm="1.4" class="ClassLiteralField"/>
    </ajc-test>
 